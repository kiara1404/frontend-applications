{"version":3,"sources":["utils/getData.js","components/BarChart.js","components/transform.js","components/Home.js","components/About.js","components/NavBar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["url","a","fetch","response","json","data","console","log","getDataSet","BarChart","d3Chart","useRef","useEffect","x","areacode","then","column","filter","stad","areamanagerid","dataArray","p","Object","keys","forEach","key","push","betaalmethode","hoeveelheid","mergeData","reduce","acc","curr","countedValues","cleanArray","item","includes","cleanEverythingElse","cleanChipArray","cleanChip","cleanCashArray","cleanCash","cleanPinArray","cleanPin","cleanedCreditcardArray","cleanCreditcard","map","toLowerCase","allDataToLowerCase","svg","d3","tooltip","append","attr","width","height","xValue","d","margin","innerWidth","innerHeight","xScale","yScale","domain","range","padding","g","call","ticks","selectAll","enter","style","bandwidth","on","event","pageX","pageY","html","transition","duration","delay","i","ease","selection","this","value","remove","toggleData","className","type","id","name","defaultChecked","htmlFor","ref","Home","About","NavBar","to","Footer","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81925871.chunk.js","sourcesContent":["async function getDataSet(url) {\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n\n    } catch (err) {\n        console.log(err)\n\n    }\n\n}\n\nexport default getDataSet;","import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport getDataSet from '../utils/getData'\nimport {\n    filterData,\n    allDataToLowerCase,\n    cleanCreditcard,\n    cleanCash,\n    cleanPin,\n    cleanChip,\n    cleanEverythingElse,\n    countedValues,\n    mergeData\n} from './transform';\nimport './BarChart.css'\n\nfunction BarChart() {\n    const d3Chart = useRef()\n\n    useEffect(() => {\n        const endpoint = 'https://opendata.rdw.nl/resource/r3rs-ibz5.json'\n        let selectedColumn = 'paymentmethod';\n        // Vincent heeft mij geholpen met functie x\n        function x(areacode) {\n            getDataSet(endpoint)\n                .then((data) => {\n                    if (areacode) { data = data.filter(stad => stad.areamanagerid == areacode) }\n\n                    console.log(data)\n\n                    data = filterData(data, selectedColumn)\n                    data = allDataToLowerCase(data)\n                    data = cleanCreditcard(data)\n                    data = cleanPin(data)\n                    data = cleanCash(data)\n                    data = cleanChip(data)\n                    data = cleanEverythingElse(data)\n                    data = countedValues(data)\n                    data = mergeData(data)\n\n                    return data\n\n                })\n\n                .then(data => {\n\n                    const svg = d3.select('svg');\n                    const tooltip = d3.select('.app').append(\"div\").attr('class', 'toolTip');\n\n\n                    // Geef een width en een height mee aan de SVG\n                    svg\n                        .attr('width', 900)\n                        .attr('height', 820)\n\n                    // sla de width en height op in een variabelen\n                    const width = svg.attr('width');\n                    const height = svg.attr('height');\n\n                    // const render = data => {\n                    const xValue = d => d.hoeveelheid;\n                    const yValue = d => d.betaalmethode;\n\n                    // geef margins mee zodat de chart mooi gecentreerd is\n                    const margin = { top: 20, right: 20, bottom: 20, left: 100 };\n                    const innerWidth = width - margin.left - margin.right;\n                    //console.log(innerWidth)\n                    const innerHeight = height - margin.top - margin.bottom;\n\n                    // bepaald de grootte van de x-as en de stappen ertussen\n                    const xScale = d3.scaleLinear()\n\n                    // scaleband bepaald de breedte van de bars\n                    const yScale = d3.scaleBand()\n\n\n                    // functie voor de schaalverdeling\n\n                    xScale\n                        .domain([0, d3.max(data, xValue)])\n                        .range([innerWidth, 0]);\n\n                    yScale\n                        .domain(data.map(yValue))\n                        .range([innerHeight, 0])\n                        .padding(0.2);\n\n\n\n\n                    const g = svg.append('g')\n                        .attr('transform',\n                            `translate(${margin.left}, ${margin.top})`\n                        );\n\n                    // maakt nog een keer nieuwe groep aan met line en text\n                    g.append('g').attr('class', 'axis').call((d3.axisLeft(xScale)).ticks(20));\n                    g.append('g').attr('class', 'axis').call(d3.axisBottom(yScale))\n                        .attr('transform', `translate(0,${innerHeight})`);\n\n                    g.selectAll('rect')\n                        .data(data)\n                        .enter()\n                        .append('rect') // maakt de bars aan\n                        .style('fill', \"rgb(102, 102, 255)\") // geeft een andere kleur aan de bars\n                        .attr('y', d => xScale(xValue(d)) - 100)\n                        // plaatsing in de grafiek (waar op de y-as)\n                        .attr('height', d => innerHeight - xScale(d.hoeveelheid))\n                        //   .attr('height', d => yScale(yValue(d))) // width van één bar\n                        .attr('width', yScale.bandwidth()) // height van één bar\n                        .attr('x', d => { return yScale(d.betaalmethode) })\n                        .attr('class', 'bar')\n                        .on('mousemove', function (event, d) {\n                            tooltip\n                                .style('display', 'inline-block')\n                                .style('left', event.pageX - 50 + 'px')\n                                .style('top', event.pageY - 120 + 'px')\n                                .html('<p> hoeveelheid:' + d.hoeveelheid + '</p>')\n                        })\n                        .on('mouseout', function (d) {\n                            console.log('out')\n                            tooltip.style('display', 'none')\n                        })\n                        .transition() // <---- Here is the transition\n                        .duration(1000) // 2 seconds\n                        .attr('y', d => xScale(xValue(d)))\n                        .delay(function (d, i) {\n                            return i * - 70\n                                ;\n                        })\n                        .attr('x', d => { return yScale(d.betaalmethode) })\n                        .ease(d3.easeExpIn);\n\n\n                    // https://medium.com/codecakes/handling-radio-buttons-in-d3-js-9c6245c6157\n                    function toggleData(selection) {\n                        let dataset;\n                        d3.selectAll('g').remove()\n                        if (selection == 'nederland') {\n                            dataset = x('')\n\n                        } else if (selection == 'amsterdam') {\n                            dataset = x('363')\n                        }\n                    }\n\n                    const input = d3.selectAll(\"input[name='data']\")\n                        .on('change', function (d) {\n                            const selection = this.value;\n                            console.log('change to', selection)\n                            toggleData(selection)\n                        })\n\n                })\n\n        }\n        x('')\n    }, [])\n\n    // --- BEGIN d3 ---\n\n\n\n    return (\n        <div className='barChart'>\n            <h1>De verschillende betaalmethodes voor parkeren in Nederland</h1>\n            <div className=\"group\">\n                <input type=\"radio\" id=\"dataNed\" name=\"data\" value=\"nederland\" defaultChecked />\n                <label htmlFor=\"dataNed\">Heel Nederland</label>\n                <input type=\"radio\" id=\"dataAms\" name=\"data\" value=\"amsterdam\" />\n                <label htmlFor=\"dataNed\">Amsterdam</label>\n\n            </div>\n            <svg ref={d3Chart}></svg>\n\n        </div>\n    )\n}\n\nexport default BarChart;","// functie voor het filteren van de data\nexport function filterData(dataArray, column) {\n    return dataArray.map(item => item[column])\n\n};\n\n// returns alle gegevens in kleine letters, dat is netter!\nexport function allDataToLowerCase(dataArray) {\n    return dataArray.map(item => item.toLowerCase())\n}\n\n// returns Visa, Mastercard etc. als creditcard\nexport function cleanCreditcard(dataArray) {\n    // lege array\n    let cleanedCreditcardArray = [];\n    //kijkt welke antwoorden visa bevat en vervangt dedze met creditcard\n    dataArray.forEach(item => {\n        if (item.includes('visa')) {\n            item = 'creditcard';\n            cleanedCreditcardArray.push(item);\n        }\n        //kijkt welke antwoorden mastercard bevat en vervangt deze met creditcard\n        else if (item.includes('mastercard')) {\n            item = 'creditcard';\n            cleanedCreditcardArray.push(item);\n        }\n        //kijkt welke antwoorden diners club bevat en vervangt deze met creditcard\n        else if (item.includes('diners club' && \"diner's club\")) {\n            item = 'creditcard';\n            cleanedCreditcardArray.push(item);\n        }\n        else if (item.includes('amex')) {\n            item = 'creditcard';\n            cleanedCreditcardArray.push(item);\n        }\n        // de rest van de gegevens moeten ook in de nieuwe array meegenomen worden.\n        else {\n            cleanedCreditcardArray.push(item)\n        }\n    })\n    return cleanedCreditcardArray;\n}\n\nexport function cleanPin(dataArray) {\n    let cleanPinArray = [];\n\n    dataArray.forEach(item => {\n        if (item.includes('vpay')) {\n            item = 'pin';\n            cleanPinArray.push(item);\n        }\n        else if (item.includes('maestro')) {\n            item = 'pin';\n            cleanPinArray.push(item)\n        }\n        else {\n            cleanPinArray.push(item);\n        }\n    })\n    return cleanPinArray;\n}\n\nexport function cleanChip(dataArray) {\n    let cleanChipArray = [];\n\n    dataArray.forEach(item => {\n        if (item.includes('chip')) {\n            item = 'chipknip';\n            cleanChipArray.push(item);\n        }\n\n        else {\n            cleanChipArray.push(item);\n        }\n    })\n    return cleanChipArray;\n}\n\nexport function cleanCash(dataArray) {\n    let cleanCashArray = [];\n\n    dataArray.forEach(item => {\n        if (item.includes('banknotes')) {\n            item = 'cash';\n            cleanCashArray.push(item);\n        }\n        else if (item.includes('coins')) {\n            item = 'cash';\n            cleanCashArray.push(item);\n        }\n        else {\n            cleanCashArray.push(item);\n        }\n    })\n    return cleanCashArray;\n}\n\nexport function cleanEverythingElse(dataArray) {\n    let cleanArray = [];\n\n    dataArray.forEach(item => {\n        if (item.includes('dip & go')) {\n            item = 'dip-tap&go';\n            cleanArray.push(item);\n        }\n        else if (item.includes('xximio')) {\n            item = 'XXImo parkeerpas';\n            cleanArray.push(item);\n        }\n        else if (item.includes('pos')) {\n            item = 'betaalautomaat';\n            cleanArray.push(item);\n        }\n        else {\n            cleanArray.push(item);\n        }\n    })\n    return cleanArray;\n}\n\n\n//bron: https://stackoverflow.com/questions/5667888/counting-the-occurrences-frequency-of-array-elements\n//functie om te de frequentie van waardes in een array te checken\nexport function countedValues(dataArray) {\n    let t = dataArray.reduce(function (acc, curr) {\n        return acc[curr] ? ++acc[curr] : acc[curr] = 1, acc\n    }, {});\n\n    return t\n}\n\n// ik wil dat 'naam' en 'aantal' als keys in een object gepusht worden  in de nieuwe array\nexport function mergeData(dataArray) {\n    let p = []\n    Object.keys(dataArray).forEach(function (key) {\n        // console.log(key, dataArray[key]);\n        p.push({ betaalmethode: key, hoeveelheid: dataArray[key] })\n        // return p\n    });\n\n    return p\n}\n\n","import React from 'react';\nimport BarChart from './BarChart';\nimport './Home.css'\n\n\nfunction Home() {\n\n    return (\n        <div className='home'>\n            <p>Ik heb vorig jaar een klein deel van de Tech Track gevolgd, hier kregen wij de opdracht om een interessante invalshoek over de auto in de stad te vinden met behulp van RDW datasets.</p>\n            <p>Ik heb gekeken naar de verschillende betaalmogelijkheden voor parkeren in Nederland en Amsterdam en hier in d3 een visualisatie gemaakt.</p>\n\n            <BarChart />\n        </div>\n    )\n}\n\nexport default Home;\n","import React from 'react';\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\n\nfunction About() {\n    return (\n        <div>\n            <p>\n                Deze applicatie is gemaakt binnen twee weken voor het derde vak, Frontend Applications, van het themasemester Information Design.\n            </p>\n            <p>Dit is een project van de opleiding Communicatie en Multimedia design aan de Hogeschool van Amsterdam.</p>\n        </div >\n    )\n}\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css'\n\nfunction NavBar(){\n\nreturn (\n<div className=\"nav\">\n    <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/about\">About</Link>\n        </li>\n    </ul>\n</div>\n\n)\n}\n\nexport default NavBar;","import React from 'react';\nimport './Footer.css'\n\n\n\n\nfunction Footer() {\n    return (\n    \n            <div className='Footer'>\n            <p>©  Kiara Broekhuizen 2022 </p>\n            </div>\n        \n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from './components/Home';\nimport About from './components/About';\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\nimport './App.css'\n\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className='app'>\n                <NavBar />\n                <Routes>\n                    <Route path='/' element={<Home />} />\n                    <Route path='/about' element={<About />} />\n                </Routes>\n        <Footer />\n            </div>\n        </Router>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}